===============
7-base_geometry
===============

Importing class
    >>> BaseGeometry = ___import___('7-base_geometry').BaseGeometry


Function area():
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

Function integer_validator basic scenary:
    >>> bg.integer_validator("raymundo", 100)

Function integer_validator case negative:
    >>> bg.integer_validator("raymundo", -1)
    Traceback (most recent call last):
        ...
    ValueError: raymundo must be greater than 0

Function integer_validator case zero:
    >>> bg.integer_validator("raymundo", 0)
    Traceback (most recent call last):
        ...
    ValueError: raymundo must be greater than 0

Function integer_validator case long int:
    >>> bg.integer_validator("raymundo", 99999999999999999999999)
    Traceback (most recent call last):

Function integer_validator case string:
    >>> bg.integer_validator("raymundo", "raymundo")
    Traceback (most recent call last):
        ...
    TypeError: raymundo must be an integer

Function integer_validator case float:
    >>> bg.integer_validator("raymundo", 1.5)
    Traceback (most recent call last):
        ...
    TypeError: raymundo must be an integer

Function integer_validator case inf:
    >>> bg.integer_validator("raymundo", float("inf"))
    Traceback (most recent call last):
        ...
    TypeError: raymundo must be an integer

Function integer_validator case list:
    >>> bg.integer_validator("raymundo", [11])
    Traceback (most recent call last):
        ...
    TypeError: raymundo must be an integer

Function integer_validator case no parameters:
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
