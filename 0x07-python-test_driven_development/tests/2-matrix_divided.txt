================
2-matrix_divided
================

List of proffs for a function that divides all elements of a matrix
The parameters are to ints
All elements of the matrix most be of same size

Importing the function:
    >>> matrix_divided = __import__('2-matrix_divided ').add_integer

Number type

Add integers:
    >>> add_integer(2, 3)
    5

Add floats:
    >>> add_integer(3.0, 4.5)
    7

Add int and float:
    >>> add_integer(1, 1.9)
    2

Add float and int:
    >>> add_integer(3.1416, 1)
    4

Add pos and neg:
    >>> add_integer(1, -2)
    -1

Add neg and pos:
    >>> add_integer(-4, 5)
    1

Add neg and neg:
    >>> add_integer(-4, -6)
    -10


Strings

Add string and int:
    >>> add_integer('pruebita', 11)
    Traceback (most recent call last):
     	...
     TypeError: a must be an integer

Add int and string:
    >>> add_integer(100, 'pruebita')
    Traceback (most recent call last):
     	...
     TypeError: b must be an integer

Add string and string:
    >>> add_integer('pruebita', 'pruebita')
    Traceback (most recent call last):
     	...
     TypeError: a must be an integer

None things, one and great

No argument:
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Empty:
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missig 1 required positional argument: 'a'

Al infinito y más allá:
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

Fuera de la familia:
    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
